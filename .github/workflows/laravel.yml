name: Laravel

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Check if composer.json exists
      id: check_files
      uses: andstor/file-existence-action@v1
      with:
        files: 'composer.json'
      
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    
    - name: give full permission to storage folder (NEW)
      run: |
        echo "++++ What is the current directory?"
        pwd
        echo "++++ What is in the storage folder?"
        ls storage
        echo "++++ Give full permission to storage folder"
        chmod -R 777 storage
          
    - name: migrate database (NEW)
      run: |
        pwd
        ls
        php artisan migrate --force --seed
  
    - name: give full permission to database folder (NEW)
      run: |
        echo "++++ What is the current directory?"
        pwd
        echo "++++ What is in the database folder?"
        ls database
        echo "++++ Give full permission to database folder"
        chmod -R 777 database

    - name: Zip artifact for deployment
      run: |
        pwd
        ls
        zip ../release.zip ./* -r

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: php-app
        path: release.zip
    

    
    # - name: Generate key
    #   run: php artisan key:generate
    # - name: Directory Permissions
    #   run: chmod -R 777 storage bootstrap/cache
    # - name: Create Database
    #   run: |
    #     mkdir -p database
    #     touch database/database.sqlite
    # - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
    #   env:
    #     DB_CONNECTION: sqlite
    #     DB_DATABASE: database/database.sqlite
    #   run: php artisan test
